/*
 * StopWatch.c
 *
 *  Created on: 24 Aug 2020
 *      Author: Heba_Tharwat
 */

#include <avr/io.h>
#include <avr/interrupt.h>
#include<util/delay.h>

unsigned char TICK = 0, sec = 0, min = 0, hour = 0;

void inter(void){

	GICR |=(1<<INT0) | (1<<INT1) | (1<<INT2);
	MCUCR |=(1<<ISC11) | (1<<ISC10) | (1<<ISC01);

}

void TIMER1_CTC(void) {
	TCCR1A = (1 << FOC1A) | (1<<FOC1B) ;
	TCCR1B = (1 << CS10) | (1 << CS12) | (WGM12);
	TCNT1 = 0;
	OCR1A = 1000;
	TIMSK = (1 << OCIE1A);

}

ISR (TIMER1_COMPA_vect) {

	      sec++;
		if (sec > 59) {
			sec = 0;
			min++;
		}

		if(min > 59){
			hour++ ;
		}

}


ISR(INT0_vect){
	//reset/start
	sec = 0, min = 0, hour = 0;
}


ISR(INT1_vect){
	 //pause
	TIFR |= (1 << ICF1);

}

ISR(INT2_vect){
	//resume

	if ((PORTA & 0x03) != 60) {

					//sec++;
					PORTA = (PORTA & 0xFC) | (sec & 0x03);
				}

				else {

					if ((PORTA & 0x0C) != 60) {
						//min++;
						//if(TICK==1)
						PORTA = (PORTA & 0xF3) | (min & 0x0C);
					}

					else {

						//hour++;
						//if(TICK==1)
						PORTA = (PORTA & 0xCF) | (min & 0x30);
					}

				}


}




int main() {

	DDRD &= (1 << PD2);
	DDRD &= (1 << PD3);
	DDRB &= (1 << PB2);
	DDRC |= 0x0F;

	PORTD |= (1 << PD2);
	PORTB |= (1 << PB2);
	PORTC |= 0x0F;


	DDRA |= 0x3F;
	//PORTA &=0xC0;
	PORTA |=0x3F;

	SREG = (1 << 7);
    inter();
	TIMER1_CTC();

	while (1) {
//testing
PORTA =(PORTA & 0xC0) | (0x01);
PORTC = (PORTC & 0xF0) | ( sec%10);
_delay_ms(4);

PORTA =(PORTA & 0xC0) | (0x02);
PORTC = (PORTC & 0xF0) | ( sec/10);
_delay_ms(4);


	}

}
